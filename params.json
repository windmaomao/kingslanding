{
  "name": "Kingslanding",
  "tagline": "Express server with Mongoose model, Restified controllers, Agenda schedulers, etc.",
  "body": "### Installation\r\n\r\n```\r\n\r\nnpm install --save kingslanding\r\n\r\n```\r\n\r\n`index.js`\r\n```\r\n\r\nvar server = require('kingslanding');\r\nserver.lift(config, function() {\r\n    console.log('Server lifted.');\r\n});\r\n\r\n```\r\n\r\n### Mongoose model with restified routes.\r\nKingslanding is a quick API server. You can setup models, routes, schedules easily with config settings stored locally or in a separate file such as\r\n\r\n`config.js`\r\n```\r\nmodule.exports = {\r\n    port: 8085,\r\n    mongo: 'mongodb://localhost/test',\r\n    model: __dirname,\r\n    controller: __dirname,\r\n    routes: {\r\n        blog: {}\r\n    }\r\n}\r\n\r\n```\r\n\r\nBlog model is defined via Mongoose in\r\n\r\n`blog.js`\r\n```\r\n\r\nvar mongoose = require('mongoose');\r\nvar Schema = mongoose.Schema;\r\nvar Mixed = Schema.Types.Mixed;\r\nmodule.exports = {\r\n    fields: {\r\n        title: { type: String },\r\n    },\r\n    options: {\r\n        collection: 'blog',\r\n        versionKey: false,\r\n        timestamps: {},\r\n        runValidators: false\r\n    },\r\n    methods: {},\r\n    indexes: {},\r\n    virtuals: {}\r\n}\r\n\r\n```\r\n\r\nSince Kingslanding uses blueprint to do all the heavy lifting for us, we can just leave empty for blog's controller \r\n`blogController.js`\r\n\r\n```\r\n\r\nmodule.exports = {\r\n};\r\n\r\n```\r\n\r\nThat's it, if you fire the server, you should see a restful resources for blog on port 8085.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}